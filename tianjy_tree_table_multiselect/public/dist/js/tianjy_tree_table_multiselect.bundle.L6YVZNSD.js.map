{
  "version": 3,
  "sources": ["../../../../../apps/tianjy_tree_table_multiselect/tianjy_tree_table_multiselect/public/js/controls.js", "../../../../../apps/tianjy_tree_table_multiselect/tianjy_tree_table_multiselect/public/js/tianjy_tree_table_multiselect.bundle.js"],
  "sourcesContent": ["frappe.ui.form.ControlTianjyTreeTableMultiSelect = class ControlTianjyTreeTableMultiSelect extends frappe.ui.form.ControlTableMultiSelect {\n\tmake_input() {\n\t\tsuper.make_input();\n\t\tthis.awesomplete.destroy();\n\t\tthis.$input.css('background-color', 'var(--control-bg)');\n\t\tthis.$input_area.addClass('form-control tree-table-multiselect');\n\t\tthis.$input.on('click', e => {\n\t\t\tthis.create_dialog();\n\t\t});\n\t}\n\tasync create_dialog(){\n\t\tconst me = this;\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(this.df.label),\n\t\t\tsize:'extra-large',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Filter',\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tfieldname: 'filter',\n\t\t\t\t\tonchange: async function () {\n\t\t\t\t\t\tconst filterString = this.get_value('filter');\n\t\t\t\t\t\tme.tree.jstree(true).search(filterString);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'HTML',\n\t\t\t\t\tfieldname: 'html',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action: values => {\n\t\t\t\tconst selected = this.tree.jstree(true).get_selected(true);\n\t\t\t\tconst link_field = this.get_link_field();\n\t\t\t\tconst deleteRows = this.rows.filter(item=>!selected.some(each=>each.id===item[link_field.fieldname]));\n\t\t\t\tconst createRows = selected.filter(item=>!this.rows.some(each=>each[link_field.fieldname]===item.id));\n\t\t\t\tthis.frm.doc[this.df.fieldname] = this.frm.doc[this.df.fieldname].filter(row =>!deleteRows.some(item=>item[link_field.fieldname]===row[link_field.fieldname]));\n\t\t\t\tthis.frm.set_value(this.df.fieldname, this.frm.doc[this.df.fieldname]);\n\t\t\t\tthis.frm.refresh_field(this.df.fieldname);\n\t\t\t\tconst value = this.get_multi_data(createRows);\n\t\t\t\tthis.parse_validate_and_set_in_model(value);\n\t\t\t\tdialog.hide();\n\t\t\t},\n\t\t});\n\t\tconst selectOptions = await this.get_select_options();\n\t\tthis.init_tree(dialog.fields_dict.html.$wrapper, selectOptions);\n\t\tdialog.show();\n\t}\n\tinit_tree(wrapper, data){\n\t\tthis.tree = wrapper;\n\t\tthis.tree.css('max-height', '600px');\n\t\tthis.tree.css('overflow', 'auto');\n\t\tthis.tree.jstree({\n\t\t\tcore:{\n\t\t\t\tdata:data,\n\t\t\t\tcheck_callback:true,\n\t\t\t},\n\t\t\tplugins:['checkbox', 'search'],\n\t\t\tsearch:{\n\t\t\t\tshow_only_matches:false,\n\t\t\t},\n\t\t\tcheckbox:{\n\t\t\t\tthree_state:false,\n\t\t\t\tkeep_selected_style:true,\n\t\t\t\ttie_selection:  true,\n\t\t\t\twhole_node:  true,\n\t\t\t},\n\t\t});\n\t}\n\trefresh_tree_data(options){\n\t\tthis.tree.jstree(true).settings.core.data = options;\n\t\tthis.tree.jstree(true).refresh();\n\t}\n\tasync get_select_options(filterString=''){\n\t\tconst doctype = this.get_options();\n\t\tif (!doctype) { return; }\n\t\tconst args = {\n\t\t\ttxt: filterString,\n\t\t\tdoctype: doctype,\n\t\t};\n\t\tconst res = await frappe.call({\n\t\t\ttype: 'POST',\n\t\t\tmethod: 'tianjy_tree_table_multiselect.tianjy_tree_table_multiselect.tianjy_tree_table_multiselect.get_select_options',\n\t\t\targs: args,\n\t\t});\n\t\tconst link_field = this.get_link_field();\n\t\treturn (res?.message||[]).map(item=>({\n\t\t\t...item,\n\t\t\tstate:{\n\t\t\t\topened:true,\n\t\t\t\tselected:this.value.some(each=>each[link_field.fieldname] === item.id),\n\t\t\t\tchecked:this.value.some(each=>each[link_field.fieldname] === item.id),\n\t\t\t},\n\t\t}));\n\t}\n\tget_multi_data(value) {\n\t\tif (!this.rows) {\n\t\t\treturn value;\n\t\t}\n\t\tconst link_field = this.get_link_field();\n\n\t\tfor (const item of value) {\n\t\t\tif (this.frm) {\n\t\t\t\tconst new_row = frappe.model.add_child(\n\t\t\t\t\tthis.frm.doc,\n\t\t\t\t\tthis.df.options,\n\t\t\t\t\tthis.df.fieldname,\n\t\t\t\t);\n\t\t\t\tnew_row[link_field.fieldname] = item.id;\n\t\t\t\tthis.rows = this.frm.doc[this.df.fieldname];\n\t\t\t} else {\n\t\t\t\tthis.rows.push({\n\t\t\t\t\t[link_field.fieldname]: item.id,\n\t\t\t\t});\n\t\t\t}\n\t\t\tfrappe.utils.add_link_title(link_field.options, item.id, item.text);\n\t\t}\n\n\t\tthis._rows_list = this.rows.map(row => row[link_field.fieldname]);\n\t\treturn this.rows;\n\t}\n};\n", "import './controls';\nfrappe.model.no_value_type.push('Tianjy Tree Table MultiSelect');\nfrappe.model.table_fields.push('Tianjy Tree Table MultiSelect');\n"],
  "mappings": "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",
  "names": []
}
